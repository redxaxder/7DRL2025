+ v0.1 "scaffold"
 + terrain with no special behavior
 + player moves
 + place tiles
 + draw tiles
   + flat shading for terrain
 + draw hand tile
 + supply of 30 tiles
 + placeholder art for monster/player
 + keyboard movement
 + keys to rotate tile
 + key to discard tile
 + torroidal geometry
 + camera
   + center is within max-norm 4 of player position
 + unform tile rng (fuss with it later)
v0.2 "iterable"
 + placeholder art for npc
 + 3 monsters
 + monsters spawn
   + initial position is outside the map
   + tile placed there blocks a spawn
 + monster turns
 + quests
    + quests spawn randomly on tile in hand
      + quests are visible in hand
    + quest placeholder graphic
    + quest heal placeholder graphic
    + display quests to user
      + quest npc is on map
    + extermination quest
        + appearance requirements:
            + there must be at least one monster type for which there is no ongoing quest
            + there must be at least 1 of such a monster
        + on completion, get 5 tiles
        + on completion, drop quest heal item
        + heal item heals player
        + monsters can't step on it
 + perfect tile bonus (+1 tile)
 + combat
   + restrict movement when by a monster
   + funnel system
   + gain exp from monster kill
 + key to level up
 + exp system
   + start with 3hp / 3 level exp
   + on level up: full heal, +1 max hp, +4 level exp
 + display
   + hp
   + total exp
   + exp-to-level
   + remaining tiles
   + upcoming monster turns
 + complete region
   + get size - 4 exp
   + get 1 tile
 + stepping on quest heal consumes 
   + (placeholder art)
 + terrain effects:
   + forest + restrict monster moves
   + road + unrestrict player moves
          + restrict tile placement
   + town + restrict monster moves
   + river + restrict tile placement
           + pool extra monster turns
             + exception for roads
           + not eligible for terrain quest if no river source
   + grass + no changes. just didn't want to leave you out, bro
 + victory
    + 4th monster type that doesn't take a turn
    + spawns on map with starting tiles
    + backup monsters stream in from a unique cave tile
v0.3 "qol"
 + end game screen / detection
 x there is a boss mcguffin that gives you like a million tiles
 + animate particles for
   + gaining exp
   + gaining tiles
   + gaining hp
   + gaining speed penalty
 + animate quest completion??
 + restart
 + quest speech bubbles
 + monster behavior by type
   + random movement
   + approach player
   + flees other monsters, default random
 + animate movement
 - art:
   - player
   - monsters
   + quest scroll
   + terrain
     + road16
     + river16
     + town16
     + forest wedge
     + grass wedge
     x folder per terrain type
     x files 0000.png through 1111.png (skip as needed)  right, up, left, down
     x 1010_connected, 1010_split, 0101_connected, 0101_split.png
   x mcguffin
   + UI
     + exp
     + hp
     + quest heal item
     + monster turns
 - sounds?
 - music?
 + indicate off-map monsters (red eyes?)
 - click to move / place tile
   - hover shows movement path
   - movement path is displayed differently if passing through forced combat
 + tile hints
   + shows where on the screen the current tile can be played
   + put a tick mark in the top left corner of the tile in hand
   + on playable positions put tick mark in the corner of the spot based on rotation
   + color the tick mark based on whether the tile is a full or partial match
 - region hints
   - if a region is large enough, give it a flag
   - on the flag, put the size of the current exp reward




.....
.###.
.#*#.
.##..
.....


what is a tile, from the perspective of the software?

enum Terrain {
  None, Grass, Town, Road, Forest, River, Quest
}
enum Cross {
  None, Vertical, Horizontal
}

struct Tile {
  [Terrain;5] // right up left down center
}

how do we draw them?

maybe do it layers?
  first draw this type, then that type over it, etc
  grass < road < river < town < forest < quest



####################
#     GGGGGGGGG    #
#     GGGGGGGGG    #
#CCCC   GGGG   CCCC#
#CCCC   GGGG   CCCC#
#CCCC   GGGG   CCCC#
#CCCC   GGGG   CCCC#
#CCCC   GGGG   CCCC#
#     GGGGGGGGG    #
#     GGGGGGGGG    #
####################

####################
#     GGGGGGGGG    #
#     GGGGGGGGG    #
#CCCC          CCCC#
#CCCCCCCCCCCCCCCCCC#
#CCCCCCCCCCCCCCCCCC#
#CCCCCCCCCCCCCCCCCC#
#CCCC          CCCC#
#     GGGGGGGGG    #
#     GGGGGGGGG    #
####################

####################
#     GGGGGGGGG    #
#     GGGGGGGGG    #
#GGGGGGGGGGGGG CCCC#
#GGGGGGGGGGGGCCCCCC#
#GGGGGGGGCCCCCCCCCC#
#GGGGGGCCCCCCCCCCCC#
#GGGG  CCCCCCCCCCCC#
#     CCCCCCCCC    #
#     CCCCCCCCC    #
####################




draw(tile, screencoord, canvas) {
  for terrain in tile.0 {
    match terrain {
       Terrain::Forrest => {
         for i in rand(10) {
           // x, y randomly chosen inside tile section bounds
           draw_tree(x, y)
         }
       }
    }
  }
}


struct Zawarudo<T> {
  tiledata: [T; WIDTH * HEIGHT],
}

fn canonical(v: V2) -> (D8,V2) {
    let x0 = pos.x.euclidean_mod(WIDTH * 2);
    let y0 = pos.x.euclidean_mod(HEIGHT * 2);
    let y = ...
    let mut p = D8::Id;
    (p, V2{x,y})
}

floodfill:
  create a new Zawarudo with say pathing info

impl Zawarudo {
  fn get(&self, pos: V2) -> T {
    let c = canonical(pos);
    ...
    let ix = x + (y * WIDTH);
    p * self.tiledata[ix]
  }

  fn put(&mut self, pos: V2, t: T) {
    let c = canonical(pos);
    ...
    let y = ...
    self.tiledata[ix] = p * t;
  }
}



canonical << check if this is visited already. if it is, don't expand
raw position  <-- add raw neighbors of this when expanding



enemy engagement:
  1) when you're next to an enemy, you have to fight it
     after you fight it, you're in the space the enemy was, and this can cascade
  2) when you're next to an enemy, you have to fight it
     after you fight it, adjacent enemies funnel into its location
     (exception if you're fighting to clear a road)



turn structure:
  move character around
  monsters stay in place
    - if you're out of tiles, monsters take a turn every time you move
  once you reach an unexplored space, place your current tile there and do monster turns
  on monster turns:
    - monsters move (but don't attack player)
    - monsters spawn
  on the player turn, if you step next to a monster, you have to fight it
    - this may force you to fight a lot of monsters if they are in a contiguous chunk

regions:
  "completing" a region potentially gives a reward
    - gain N-5 xp, where N is the number of tiles spanned
    - gain 1 tile

  "soft" impassability
  walking "impassable" terrain the number of turns monsters will get once you place a tile
  some different behaviors for terrain types:
    - river: "soft" impassability
      terminus: mountain, spring
    - road: 
        when you're on a tile that that an outward road edge that is matched by the adjacent tile,
        you can move in that direction even if it would normally be forbidden by needing to fight a monster
      terminus: town, character
    - town:
      worth +1 exp per tile normally
      each town tile has a wall, monsters can't pass through walls
        when a tile has an outward town edge and at least one non-town edge,
        monster movement is limited to non-town edges
    - forest:
        when a tile has an outward forest edge, monster movement is limited to such edges
    - grass:
      the boring one

  "perfecting" a tile gets a tile back
    - many tiles do not have hard constraints on adjacent tiles
    - but breaking soft constraints means you don't get the perfect bonus for the jank tiles
    - hard constraints only on river and road

resources:
  hp
  xp
  tiles on the map
  tile supply  <-- main bottleneck resource
  quests in progress
  unclaimed quest rewards

what is the reward for levelling up?
  5hp / 5xp
  max hp +1
  xp required +4
  full heal
  (can defer claiming level up and xp will be preserved on overflow)

how do you win?
  - time survival
  - are you a bad enough dude to beat the big monster? (dragonsweeper style)
    tiered quest, there's a big monster-spawning tile, every time you play any tile
    a stronger monster spawns on the boss tile. Must kill it N times. The boss does
    not move
  - play in some sort of compact space, there are a finite number of tiles you can play,
    once you have plugged all the holes, monsters can't get in 
  - final score based on:
    - perfect tiles
    - tiles without monsters on them
    - leftover resources

quests:
  - kill N of this monster
  - fetch quest?
  - monster nest?
    spawns monsters regularly, has to be cleared
  reward:
    - gain 5? tiles on completion
    - gain a full heal on claim
      - deposit healing potion on tile
      - stepping on the potion drinks it
        (sometimes this is an obstacle)

monsters:
  - different pathing preferences
  - a monster that seeks out towns to wreck
    - giant lizard
  - a monster that chases after the player
  - a monster that eats tiles?
  - every darkness tile that is adjacent to a placed tile has a chance to spawn a monster each turn
    - a monster in darkness can step onto a placed tile


ui:
  wasd to move
  qe rotates the current tile
  x to discard
  z to level up
  c to claim quest reward
  number above monster
  - or number above block of monsters?
  hints:
  - distinguish spaces where the current tile can be placed with its current rotation
  - mouse movement with shown path
  - highlight contiguous blocks of monsters
  color coded terrain
  - every terrain is drawn using 1bit graphic style
  - if there are multiple terrain on a tile, that tile is multiple colors


items?

dorfromantik but you're making dungeons
  - when you place a tile, the character paths from where they are to your tile
  - preview the outcomes of the routing
    - you'll see if they get hurt in a fight or etc
  - between turns, monsters can spawn or move around on the map
  - some tiles have an NPC that offers a quest and a reward
    - reward:
      - on dr, it's just tiles
      - here: tiles, restore hp, upgrade character
    - quests:
      - fight monster
      - collect materials
  - reward for clearing all monsters out of a region
    - greater for bigger regions?
    - +n tiles?
    - heal?
    - exp?
  - pathing:
    - character always detours to fight adjacent monsters before resuming pathing
  - wang tiles
    - the type assignments happen on tile edges for the purpose of matching
  - monsters spawn from the edges of tiles from "unexplored regions"

         @..................................
         ......sssssssssssssss..............
         ......s............................
         ......s............................
         ......s............................
         ......s............................
         ...................................
         ...................................
         ...................................
         .....................x.............
         ...................................
         ...................................



#######################################
#      GGG         #                  #
# GGGGGG           #                  #
# GGGGGG           #                  #
#GGGGGGG    CCCCCCC#                  #
#GGGGGGG CCCCCCCCCC#        |---------#
#G       CCCCCCCCCC#        |         #
#      CCCCCCCCCC  #        |         #
#      CCCCCCCCC   #        |         #
#      CCCCCCC     #        |         #
#######################################
#        |         #
#        |         #
#        |         #
#        |         #
#        |---------#
#        |         #
#        |         #
#        |         #
#        |         #
####################










3 dwarves in a trenchcoat
  - dwarves want access to the elf-only dungeon so they wear a disguise
  - each dwarf has its own slot in the turn order
    - can only move on bottom dwarf's turn
    - can only use items/magic on middle dwarf's turn
    - can only only attack on top dwarf's turn
    - or do them all on one turn because you have three actions because 3 dwarves
  - tactically disband the collective unit to take individual actions
    - or get knocked over by an enemy or trap
    - but alarms go off if an elf spots you
  - each dwarf only has one stat, strength, and that stat derives to different attributes depending on position
    - movement speed/dexterity is strength of bottom dwarf
  - each dwarf can carry a different weapon, so you might need to reorder dwarves on context
  - some enemies are in trenchcoats also, but sometimes they're just wearing trenchcoats and sometimes
    they are other creatures stacked and in disguise

gummy bear mafia
  - less a concrete idea and more something to play with in a candy theme
  - if things are gummy they can fuse and squish together

pre-rolled attacks
  - attack rolls happen for all of your stuff before you pick them
  - choose among them knowing the results
  - the choices branch the future RNG as well, and maybe you want to miss now to hit later sometimes
  - you have an "insight" resource
  - you can toggle between normal actions and "reading mode"
  - action in reading mode consume insight and are rewindable


split-world stealth in physical space and murderhobo in cyberspace
  - the protagonist is super physically weak. loses all fights
  - they're an elite hacker and can stomp things in the digital world
  - the physical enemies are cyborgs with implants that can be turned against them if hacked
    - sight implant: more perception, 
        hacks:
          - blind them 
          - detect where they are looking
          - make them see hallucinations
    - arm implant: more powerful
        hacks:
          - disarm
          - force attack
    - leg implant: faster, but when hacked, can be immobilized, or made to kick things
    - comm link: informs allies of things, but when hacked, can feed distracting information
    - traps: hack to make them hit enemies instead
    - robot enemies: hack to make them explode

involuntary time travel
  - you have an illness/curse/something that causes you to travel back in time by n turns every n turns
  - when you do this, you leave behind time clones
  - interacting with these time clones hurts you
    - "time damage"
    - littering the map with clones is the main source of pressure to move forward
  - you can use the time travel to clone items
    - cloned consumables don't necessarily have an effect again
    - maybe cloned consumables do time damage when you eat/drink them
  - there are things on the map which increase n
    - this effectively brings you further into the future
    - this is the only way you can get further into the future
  - some types of special damage cause n to go down
    - it also moves forward your reset point by the same amount
  eg: you're at t=100 with n=5
      you're looping through turns 96,97,98,99,100
      if you take damage so that n=4, you instead loop through
                                      97,98,99,100
  - this can be presented to the player as time: remaining / rewind_amount
                                                  ^ turns before rewind  ^
                                                                         | n
                                                 pickups add to both numbers
         t=100         x......
         t=105                x
         rewind t=100         x
  - "chronovirus"
  - buttons that open doors when you stand on them
  - buttons that activate deathtraps when you step on them
    - lure monsters into it
  - shops could be fun and irritating

 


roguelike puyo puyo?


detritus retry?

x-com roguelike
  - squad of ~6
